{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\IBS\\\\SAS\\\\src\\\\pages\\\\react.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YourComponent = () => {\n  _s();\n  const [inputValues, setInputValues] = useState({\n    input1: '',\n    input2: ''\n    // Add more input fields as needed\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputValues({\n      ...inputValues,\n      [name]: value\n    });\n  };\n  const handleSubmit = () => {\n    const integerValues = Object.values(inputValues).map(value => parseInt(value, 10));\n\n    // Send integerValues as an array to the Flask server\n    fetch('http://localhost:5000/print_data', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        data: integerValues\n      })\n    }).then(response => response.json()).then(data => {\n      // Log the server response\n      console.log('Server Response:', data);\n      // Handle server response as needed\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"input1\",\n      value: inputValues.input1,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"input2\",\n      value: inputValues.input2,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(YourComponent, \"TgAf6sBASKzRUANDUpliU9/PZ9E=\");\n_c = YourComponent;\nexport default YourComponent;\nvar _c;\n$RefreshReg$(_c, \"YourComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","YourComponent","_s","inputValues","setInputValues","input1","input2","handleChange","e","name","value","target","handleSubmit","integerValues","Object","values","map","parseInt","fetch","method","headers","body","JSON","stringify","data","then","response","json","console","log","catch","error","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/Projects/IBS/SAS/src/pages/react.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst YourComponent = () => {\n  const [inputValues, setInputValues] = useState({\n    input1: '',\n    input2: '',\n    // Add more input fields as needed\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setInputValues({\n      ...inputValues,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = () => {\n    const integerValues = Object.values(inputValues).map(value => parseInt(value, 10));\n\n    // Send integerValues as an array to the Flask server\n    fetch('http://localhost:5000/print_data', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ data: integerValues }),\n    })\n      .then(response => response.json())\n      .then(data => {\n        // Log the server response\n        console.log('Server Response:', data);\n        // Handle server response as needed\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        name=\"input1\"\n        value={inputValues.input1}\n        onChange={handleChange}\n      />\n      <input\n        type=\"text\"\n        name=\"input2\"\n        value={inputValues.input2}\n        onChange={handleChange}\n      />\n      {/* Add more input fields as needed */}\n\n      <button onClick={handleSubmit}>Submit</button>\n    </div>\n  );\n};\n\nexport default YourComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC;IAC7CO,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE;IACR;EACF,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCP,cAAc,CAAC;MACb,GAAGD,WAAW;MACd,CAACM,IAAI,GAAGC;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,aAAa,GAAGC,MAAM,CAACC,MAAM,CAACZ,WAAW,CAAC,CAACa,GAAG,CAACN,KAAK,IAAIO,QAAQ,CAACP,KAAK,EAAE,EAAE,CAAC,CAAC;;IAElF;IACAQ,KAAK,CAAC,kCAAkC,EAAE;MACxCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI,EAAEX;MAAc,CAAC;IAC9C,CAAC,CAAC,CACCY,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACD,IAAI,IAAI;MACZ;MACAI,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEL,IAAI,CAAC;MACrC;IACF,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC;EAED,oBACE/B,OAAA;IAAAgC,QAAA,gBACEhC,OAAA;MACEiC,IAAI,EAAC,MAAM;MACXxB,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAEP,WAAW,CAACE,MAAO;MAC1B6B,QAAQ,EAAE3B;IAAa;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFtC,OAAA;MACEiC,IAAI,EAAC,MAAM;MACXxB,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAEP,WAAW,CAACG,MAAO;MAC1B4B,QAAQ,EAAE3B;IAAa;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eAGFtC,OAAA;MAAQuC,OAAO,EAAE3B,YAAa;MAAAoB,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAACpC,EAAA,CAxDID,aAAa;AAAAuC,EAAA,GAAbvC,aAAa;AA0DnB,eAAeA,aAAa;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}